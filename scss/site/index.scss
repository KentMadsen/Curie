//

#cover-container-homepage
{
    @extend %no-margin-or-padding;
    @extend %extend-fully;

    background-repeat: no-repeat;
    
    background-size     : cover;
    background-position : center;

    background-image    : url('https://curie.designermadsen.com/sites/images/10.jpg');

    position : absolute;

    z-index: -1;
}


#cover-container-homepage
{
    animation: animated_space_size linear 190s infinite;
}

@keyframes animated_space_size
{
    // Step size
    $t : 4;

    // subdivision size, calculates interpolation points
    $subdiv     : 5;

    //
        // Full Range size
    $base_full_degrees : ( 360 );
    
        // Steps
    $base_increment_of_degrees : $base_full_degrees / $t;

    //
    $base_size : 1.1;
    $base_max_size : 4.0;
    
    // entire range
    $range : 100%;
    
    // Calc mid point
    $range_mid: $range / 2;

    // Calc steps
    $range_frame : $range / $t;
    

    // Keypoints
    @for $i from 0 to ( $t + 1 )
    {
        // current position
        $current_level: $i;
        
        // current position in procentage
        $current_frame: ( ( $current_level ) * $range_frame );
        $current_degrees: ( $current_level * $base_increment_of_degrees ) + deg;

        // Generates Frame
        #{ $current_frame } {
            transform: rotate( $current_degrees )
                       scale( $base_size,
                              $base_size );
        }
    }

    // Interpolate points between, 0% -> 50%
    @for $interpolation_point from 0 to ( ( $subdiv + 1 ) )
    {
        // current position
        $current_level: $interpolation_point;

        // End, Begin
        $range_area: (50 - 0) / $subdiv;

        //
        $range_frame_position: $range_area / $subdiv;

        $current_frame: ($range_area * $current_level) +deg;

        #{ $current_frame }
        {
            transform: rotate( $current_degrees )
                       scale( $base_size,
                              $base_size );
        }

    }

    // Interpolate points between, 50% -> 100%
    @for $interpolation_point from 0 to ( ( $subdiv + 1 ) )
    {
        // current position
        $current_point : $interpolation_point;

        $range_area:(100 - 50);

        // End, Begin
        $range_frame_position: $range_area / $subdiv;
        
        $current_frame: ($range_area * $current_level) +deg;

        #{ $current_frame }
        {
            transform: rotate( $current_degrees )
                       scale( $base_size,
                              $base_size );
        }

    }


}